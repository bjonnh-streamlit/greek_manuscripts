{"version":3,"sources":["MyComponent.tsx","index.tsx"],"names":["MyComponent","renderData","useRenderData","useState","currentWordIndex","setCurrentWordIndex","setWord","useCallback","index","Streamlit","setComponentValue","text","args","map","object","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPA0CeA,EAnCgB,WAE7B,IAAMC,EAAaC,0BAEnB,EAAgDC,oBAAU,GAAE,mBAArDC,EAAgB,KAAEC,EAAmB,KAGtCC,EAAUC,uBAAY,SAACC,GAC3BH,EAAoBG,GACpBC,YAAUC,kBAAkBF,KAC3B,IAKGG,EAAsBV,EAAWW,KAAW,KAMlD,OACE,8BACGD,EAAKE,KAAI,SAACC,EAAQN,GACjB,OAAIA,IAAUJ,EACL,0BAAMW,QAAS,kBAAMT,EAAQE,KAASM,EAAM,KAG5C,0BAAMC,QAAS,kBAAMT,EAAQE,KAAQ,2BAAIM,GAAW,UC9BrEE,IAASC,OACP,kBAAC,IAAMC,WAAU,KACf,kBAAC,oBAAiB,KAChB,kBAAC,EAAW,QAGhBC,SAASC,eAAe,W","file":"static/js/main.f3be604c.chunk.js","sourcesContent":["import { Streamlit } from \"streamlit-component-lib\"\nimport { useRenderData } from \"streamlit-component-lib-react-hooks\"\nimport React, { useState, useCallback } from \"react\"\n\n/**\n * This is a React-based component template with functional component and hooks.\n */\nconst MyComponent: React.VFC = () => {\n  // \"useRenderData\" returns the renderData passed from Python.\n  const renderData = useRenderData()\n\n  const [currentWordIndex, setCurrentWordIndex] = useState(-1)\n\n  /** Click handler for our \"Click Me!\" button. */\n  const setWord = useCallback((index) => {\n    setCurrentWordIndex(index)\n    Streamlit.setComponentValue(index)\n  }, [])\n\n\n  // Arguments that are passed to the plugin in Python are accessible\n  // via `renderData.args`. Here, we access the \"name\" arg.\n  const text: Array<string> = renderData.args[\"text\"]\n\n  // Show a button and some text.\n  // When the button is clicked, we'll increment our \"numClicks\" state\n  // variable, and send its new value back to Streamlit, where it'll\n  // be available to the Python program.\n  return (\n    <span>\n      {text.map((object, index) =>{\n        if (index !== currentWordIndex) {\n          return <span onClick={() => setWord(index)}>{object} </span>;\n        } else\n        {\n          return <span onClick={() => setWord(index)}><b>{object}</b> </span>;\n        }\n      })}\n    </span>\n  )\n}\n\nexport default MyComponent\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { StreamlitProvider } from \"streamlit-component-lib-react-hooks\"\nimport MyComponent from \"./MyComponent\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <StreamlitProvider>\n      <MyComponent />\n    </StreamlitProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}